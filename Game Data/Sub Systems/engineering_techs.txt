System: ShipBay
	Name: #SS_SHIPBAY_NAME
	Description: #SS_SHIPBAY_DESC
	Appearance: ShipBay
	Explosion: subsystem_destroyed
	
	Tags: ShipBay, Restrict:CarrierHull, Storage
	Tied To: Engi_Root 0
	
	Available: Techs.Engi_Root.Level >= 0
	Level: Techs.Engi_Root.Level
	
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 5 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 5 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

	Costs: Metals[20 * Size * pow(SUBS_COST_CRV, Level)], Electronics[5 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[1 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 0.5
	
	Tick Rate: 1

	vShipBay: Size * (1 / 20) * 1.01								//was ((Size * (1 / 32) * (2 - decay(pow(LEVEL_GAIN_CURVE,Level), 12))
	
	Provides: ShipStorage with
		Amount[vShipBay]

	Hints: ShipBay[vShipBay] //Divide by space taken by a scale 1 ship

System: LifeSupport
	Appearance: LifeSupport
	
	Name: #SS_LIFESUPPORT_NAME
	Description: #SS_LIFESUPPORT_DESC
	Explosion: vent_gas
	
	Tags: Control
	Tied To: Engi_Root 0
	
	Available: Techs.Engi_Root.Level >= 0
	Level: Techs.Engi_Root.Level
	
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 20 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 50 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

	Costs: Metals[150 * Size * pow(SUBS_COST_CRV, Level)], Electronics[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[10 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1
	
	Tick Rate: 4
	
	vAirGen: 5 * Size * pow(LEVEL_GAIN_CURVE, Level)
	
	Provides: MakeAir with Amount[vAirGen]
	Provides: AirStorage with Amount[progress(50,10,Level) * Size]

	Consumes:
		To Run: Power[10 * Size]
	
	Hints: Air[vAirGen]

System: CrewQuarters
	Appearance: CrewQuarters
	Name: #SS_CREWQUARTERS_NAME
	Description: #SS_CREWQUARTERS_DESC
	Explosion: subsystem_destroyed
	
	Tags: Control
	Tied To: Engi_Root 0
	
	Available: Techs.Engi_Root.Level >= 0
	Level: Techs.Engi_Root.Level
	
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 20 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 30 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

	Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], Electronics[20 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 0.75
	
	Tick Rate: 4
	
	vCrewStore: ceil(25 * Size)
	vCrewRegen: Size * 2.5 * pow(LEVEL_GAIN_CURVE, Level)			//was Size * 2.0
				
	//vMetalCost: Size * 0.001 * pow(LEVEL_GAIN_CURVE, Level)   	//for now only metal cost, but others possible
	vMetalCost: Size * 0.1 * * max((Level / 2), 1)					//wasSize * 0.1 * pow(LEVEL_GAIN_CURVE, Level) * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),35))
	
	Provides: CrewQuarters with Amount[vCrewStore], Regen[vCrewStore * 0.01]
	
	Provides: DelayedRepairManpower with
		Rate[vCrewRegen], MetalCost[vMetalCost]
		
	Provides: HasDelRepair with Amount[1]

	Consumes:
		To Run:
			Power[2 * Size], Air[1 * Size]
	
	Hints: Crew[vCrewStore], Regen[vCrewRegen], RegenCost[-1 * vMetalCost]

System: Bridge
	Name: #SS_BRIDGE_NAME
	Description: #SS_BRIDGE_DESC
	Appearance: Bridge	
	Explosion: subsystem_destroyed

	Tags: Control
	Tied To: Engi_Root 0
	
	Available: Techs.Engi_Root.Level >= 0
	Level: Techs.Engi_Root.Level
	
	Size: Scale	
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 50 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 30 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[125 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[10 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 4
	
	Tick Rate: 4
	
	vCrewReq: ceil(5 * Size * (1 + decay(pow(LEVEL_GAIN_CURVE,Level),20)))													//was ceil(5 * Size * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),40)))
	vControlGen: 100 * Size * pow(LEVEL_GAIN_CURVE, (1 + (Level / 2)))
	
	Provides: Control with
		Amount[vControlGen]
	
	Requires:
		To Run: Crew[vCrewReq]
	
	Consumes:
		To Run: Power[2 * Size]
	
	Hints: Control[vControlGen], Crew[vCrewReq * -1]

System: Cockpit
	Name: #SS_COCKPIT_NAME
	Description: #SS_COCKPIT_DESC
	Appearance: Cockpit
	Explosion: subsystem_destroyed

	Tags: Control, Require:FighterBomber
	Tied To: Engi_Root 0
	
	Available: Techs.Engi_Root.Level >= 0
	Level: Techs.Engi_Root.Level
	
	Size: Scale	
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 50 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 30 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[125 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[10 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 3
	
	Tick Rate: 4
	
	vControlGen: 80 * Size * pow(LEVEL_GAIN_CURVE, Level)
	
	Provides: Control with
		Amount[vControlGen]

	Consumes:
		To Run: Power[2 * Size]
		
	Hints: Control[vControlGen]

System: IntegratedCommandCenter
	Name: #SS_ICC_NAME
	Description: #SS_ICC_DESC
	Appearance: IntegratedCommandCenter
	Explosion: subsystem_destroyed

	Tags: Control
	Tied To: Engi_Root 0
	
	Available: Techs.Engi_Root.Level >= 0
	Level: Techs.Engi_Root.Level
	
	Size: Scale	* 2
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 70 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 30 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[125 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[10 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 4
	
	Tick Rate: 4
	
	vControlGen: 80 * Size * pow(LEVEL_GAIN_CURVE, (1 + (Level / 2)))
	vCrewStore: ceil(5 * Size)
	vCrewRegen: Size * 2.0 * pow(LEVEL_GAIN_CURVE, Level)			//was Size * 1.0
	vAirGen: 1 * Size * pow(LEVEL_GAIN_CURVE, Level)
	
	vMetalCost: Size * 0.1 * * max((Level / 2), 1)					//was Size * 0.1 * pow(LEVEL_GAIN_CURVE, Level) * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),35))   //for now only metal cost, but others possible
	
	Provides: Control with
		Amount[vControlGen]
	
	Provides: CrewQuarters with Amount[vCrewStore], Regen[vCrewStore * 0.01]
	
	Provides: DelayedRepairManpower with
		Rate[vCrewRegen], MetalCost[vMetalCost]
		
	Provides: HasDelRepair with Amount[1]

	Provides: MakeAir with Amount[vAirGen]
	Provides: AirStorage with Amount[progress(50,10,Level) * Size]
	
	Consumes:
		To Run:
			Power[10 * Size]
	
	Hints: Crew[vCrewStore], Regen[vCrewRegen], Control[vControlGen], Air[vAirGen], RegenCost[-1 * vMetalCost]
	
System: Computer
	Name: #SS_COMPUTER_NAME
	Description: #SS_COMPUTER_DESC
	Appearance: CPU
	Explosion: subsystem_destroyed
	
	Tags: Control
	Tied To: Engi_Root 0

	Available: Techs.Engi_Root.Level >= 0
	Level: Techs.Engi_Root.Level
	
	Size: Scale	
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 20 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 75 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Costs: Metals[50 * Size * pow(SUBS_COST_CRV, Level)], Electronics[400 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[30 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 6
	
	Tick Rate: 4
	
	vComputerControlGen: Size * 50 * pow(LEVEL_GAIN_CURVE, (1 + (Level / 2)))
	
	Provides: Control with
		Amount[vComputerControlGen]
	
	Consumes:
		To Run: Power[20 * Size]
	
	Hints: Control[vComputerControlGen]

System: AdvancedAICore
	Name: #SS_ADVAICORE_NAME
	Description: #SS_ADVAICORE_DESC
	Appearance: AdvancedAICore
	Explosion: subsystem_destroyed
	
	Tags: BoardingDefense, Control, NoBonusHealth
	Tied To: Engi_Root 0

	Available: Techs.Engi_Root.Level >= 0
	Level: Techs.Engi_Root.Level
	
	Size: Scale	* 2
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 5 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 120 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[400 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[60 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 10
	
	Tick Rate: 4
	
	vComputerControlGen: Size * 120 * pow(LEVEL_GAIN_CURVE, (1 + (Level / 2)))
											//was vCrewStore: ceil(10 * Size)
	
	Provides: Control with
		Amount[vComputerControlGen]
		
											//was Provides: CrewQuarters with Amount[vCrewStore], Regen[vCrewStore * 0.02]
	
	Consumes:
		To Run: Power[50 * Size]
	
	Hints: Control[vComputerControlGen], BoardingDefense[Durability]								//was Crew[vCrewStore]

System: QuantumComputer
	Name: #SS_QUANTUMCOMP_NAME
	Description: #SS_QUANTUMCOMP_DESC
	Appearance: QuantCompCore
	Explosion: electrical_spark
	
	Tags: Link
	Tied To: Engi_Root 0

	Available: Techs.Engi_Root.Level >= 0
	Level: Techs.Engi_Root.Level
	
	Size: Scale	/ 2
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 15 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 75 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

	Costs: Metals[50 * Size * pow(SUBS_COST_CRV, Level)], Electronics[600 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[200 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 10

	Tick Rate: 1

	Alters: subSysAlterations::reduceControlReq[Size * 75 * pow(LEVEL_GAIN_CURVE, Level)]

	Consumes:
		To Run: Power[10 * Size]

	Hints: Local/ReduceControl[Size * 75 * pow(LEVEL_GAIN_CURVE, Level)]