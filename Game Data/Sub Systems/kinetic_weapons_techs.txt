System: PlanetCannon
	Name: #SS_PLANETCANNON_NAME
	Description: #SS_PLANETCANNON_DESC
	Appearance: DefenseBuilding

	Available: Techs.Kinetic_Root.Level >= 0
	Level: Techs.Kinetic_Root.Level
	
	Size: Scale
	Durability: 800 * Size * pow(LEVEL_GAIN_CURVE, Level) * PLANET_STRUCT_MULT
	Mass: 800 * Size * pow(LEVEL_GAIN_CURVE, Level)
	
	Tags: Structure, Weapon
	Tied To: Kinetic_Root 0
	
	Costs: Metals[200 * Size * pow(COST_INC_CRV, Level)], Electronics[25 * Size * pow(COST_INC_CRV, Level)], AdvParts[25 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1 * STRUCT_COMPLX_MULT
	
	vDamage: Size * 200 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT		//was Size * 100
	vDelay: max(4, 10 * decay(pow(LEVEL_GAIN_CURVE,Level),50)) * GAME_RELOAD_MULT
	vDeviation: 0.1
	vRange: (40 * (1 + (Level * (0.02 * WEAP_RANGE_CURVE)))) * WEAP_RANGE_MULT * Size
	vProjSpeed: vRange * 0.4
	vEffectiveRange: 0.8
	vMinHit: 0.5
	vWorkers: Size*300000

	Provides: ProjWeapon with Damage[vDamage],
				Delay[vDelay], AmmoUse[0], Range[vRange], Speed[vProjSpeed],
				Deviation[vDeviation], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
	
	Requires:
		To Run:
			Workers[vWorkers]

	Hints: Workers[vWorkers * -1], DPS[vDamage / vDelay], Range[vRange], HP[Durability]

	
//    Variables Used
//
//////////////////////////
//
//    vDamage - All Types of Damage
//    vDelay - Reload Time
//    vDeviation
//    vPowCost - Power Costs
//    vRange - Weapons Range ONLY! Not used for AoE Effect Range
//    vEffectiveRange - Effective Range
//    vMinDmg - Lowest Damage
//    vWasteHeat - Heat Needed
//    vAoE_Range - Range AoE Weapons Effect
//    vRequiredCharge - Charge needed for Charge to Fire
//    vSpeed - Weapon Speed
//     vMinHit - Minimum Hit Chance
//     vAccuracy - Hit Chance
//
//////////////////////////

System: Railgun
    Name: #SS_RAILGUN_NAME
    Description: #SS_RAILGUN_DESC
    Appearance: RailGun
	Explosion: subsystem_destroyed

	Available: Techs.Kinetic_Root.Level >= 0
	Level: Techs.Kinetic_Root.Level
	
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 80 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
    
    Tags: Weapon, ProjWeapon, Railgun
	Tied To: Kinetic_Root 0
    
    Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[Size * 25]
    Complexity: 1
    
    vDamage: Size * 50 * pow(LEVEL_GAIN_CURVE, Level) * min((1 + (sqrt(Size) / 30)), 3) * GAME_DAMAGE_MULT                            //was Size * 40
    vDelay: 2.5 * (1 + decay(Level, 8)) * min((1 + (sqrt(Size) / 20)), 5) * GAME_RELOAD_MULT
    vDeviation: 0.1
    vRange: (200 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
    vSpeed: vRange * 0.33 * BALLISTIC_PROJ_FACTOR                                                                                //was progress(70,2*LEVEL_GAIN_CURVE,Level) * min((1 + Size / 5000), 3)
    vEffectiveRange: 0.5
    vMinHit: 0.33
    vAmmoUse: 1 * Size

    Provides: ProjWeapon with Damage[vDamage], Delay[vDelay], AmmoUse[vAmmoUse],
        Range[vRange], Speed[vSpeed], Deviation[vDeviation], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 25]

    Requires:
        To Run:
            Control[10 * Size]

    Hints: Alpha[vDamage], Ammo[Size * 25], AmmoUse[-1 * vAmmoUse / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit]

System: TwinRailgun
    Name: #SS_TWINRAILGUN_NAME
    Description: #SS_TWINRAILGUN_DESC
    Appearance: TwinRailgun
	Explosion: subsystem_destroyed

	Available: Techs.Kinetic_Root.Level >= 0
	Level: Techs.Kinetic_Root.Level
	
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 80 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 160 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
    
    Tags: Weapon, ProjWeapon, Railgun, ClipWeapon
	Tied To: Kinetic_Root 0
    
    Costs: Metals[400 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[50 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size], Ammo[Size * 25]
    Complexity: 2
    
    vBurst: 2
    vDelay: (2.5 * (1 + decay(Level, 8)) * min((1 + (sqrt(Size) / 20)), 5) * 2 * GAME_RELOAD_MULT) - 0.2
    vDamage: Size * 50 * pow(LEVEL_GAIN_CURVE, Level) * min((1 + (sqrt(Size) / 30)), 3) * GAME_DAMAGE_MULT                            //was Size * 40
    vShotDelay: 0.2
    vTotalDelay: (vShotDelay * (vBurst - 1)) + vDelay
    vRange: (200 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
    vSpeed: vRange * 0.33 * BALLISTIC_PROJ_FACTOR                                                                                    //was progress(70,2*LEVEL_GAIN_CURVE,Level) * min((1 + Size / 5000), 3)
    vEffectiveRange: 0.5
    vMinHit: 0.33
    vAmmoUse: 1 * Size

    Provides: TwinProjWeapon with Damage[vDamage], ShotDelay[vShotDelay],
        Delay[vDelay], ClipSize[vBurst], AmmoUse[vAmmoUse], Range[vRange], Speed[vSpeed], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 25]

    Requires:
        To Run:
            Control[15 * Size]

    Hints: 	Alpha[vDamage * vBurst], Ammo[Size * 25],AmmoUse[(-1 * vAmmoUse * vBurst) / vTotalDelay],DPS[(vDamage * vBurst) / vTotalDelay], Local/Range[vRange], Local/DMGperShot[vDamage],Local/AmmoperShot[-1 * vAmmoUse],Local/ProjSpeed[vSpeed],Local/Delay[vTotalDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit],Local/ClipDelay[vDelay],Local/Clip[vBurst] 			


System: MuonCannon
    Name: #SS_MUONCANNON_NAME
    Description: #SS_MUONCANNON_DESC
    Appearance: MuonCannon
	Explosion: subsystem_destroyed

	Available: Techs.Kinetic_Root.Level >= 0
	Level: Techs.Kinetic_Root.Level
	
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: 100 * Size * pow(HEALTH_CURVE,HPLevel) * HEALTH_MULT
    Mass: 80 * Size
    
    Tags: Weapon, ProjWeapon
	Tied To: Kinetic_Root 0
    
    Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[Size * 10]
    Complexity: 1
    
    vDamage: Size * 64 * pow(LEVEL_GAIN_CURVE, Level) * min((1 + (sqrt(Size) / 30)), 3) * GAME_DAMAGE_MULT
    vDelay: 4 * (1 + decay(Level, 8)) * min((1 + (sqrt(Size) / 20)), 5) * GAME_RELOAD_MULT
    vDeviation: 0.15
    vRange: (200 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
    vSpeed: vRange * 0.33 * BALLISTIC_PROJ_FACTOR
    vAmmoUse: 1 * Size
    vEffectiveRange: 0.5
    vMinHit: 0.33

    Provides: MuonWeapon with Damage[vDamage], Delay[vDelay], AmmoUse[vAmmoUse],
        Range[vRange], Speed[vSpeed], Deviation[vDeviation], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 10]
    
    Consumes:
        To Run:
            Power[10 * Size]

    Requires:
        To Run:
            Control[10 * Size]

    Hints: Alpha[vDamage], Ammo[Size * 10], AmmoUse[-1 * vAmmoUse / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay]    

	
System: HyperRailgun
    Name: #SS_HYPERRAILGUN_NAME
    Description: #SS_HYPERRAILGUN_DESC
    Appearance: HeavyRailgun
	Explosion: subsystem_destroyed

	Available: Techs.Kinetic_Root.Level >= 0
	Level: Techs.Kinetic_Root.Level
	
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 160 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
    
    Tags: Weapon, ProjWeapon, Railgun, WMD
	Tied To: Kinetic_Root 0
    
    Costs: Metals[300 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[40 * Size * pow(SUBS_COST_CRV, Level)], Labr[8 * Size], Ammo[Size * 25]
    Complexity: 3
    
    vDamage: Size * 95 * pow(LEVEL_GAIN_CURVE, Level) * min((1 + (sqrt(Size) / 30)), 3) * GAME_DAMAGE_MULT                    //was 80
    vDelay: 4.5 * (1 + decay(Level, 8)) * min((1 + (sqrt(Size) / 20)), 5) * GAME_RELOAD_MULT
    vDeviation: 0.1
    vRange: (300 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
    vSpeed: vRange * 0.33 * BALLISTIC_PROJ_FACTOR                                                //was progress(100,2*LEVEL_GAIN_CURVE,Level) * min((1 + Size / 5000), 4)
    vEffectiveRange: 0.5
    vMinHit: 0.33
    vAmmoUse: 4 * Size

    Provides: HyperBullet with Damage[vDamage], Delay[vDelay], AmmoUse[vAmmoUse],
        Range[vRange], Speed[vSpeed], Deviation[vDeviation], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 25]

    Requires:
        To Run:
            Control[20 * Size]

    Hints: Alpha[vDamage], Ammo[Size * 25], AmmoUse[-1 * vAmmoUse / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit]

	
System: TwinHeavyRailgun
    Name: #SS_TWINHEAVYRAILGUN_NAME
    Description: #SS_TWINHEAVYRAILGUN_DESC
    Appearance: TwinHeavyRailgun
	Explosion: subsystem_destroyed

	Available: Techs.Kinetic_Root.Level >= 0
	Level: Techs.Kinetic_Root.Level
	
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 80 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 320 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
    
    Tags: Weapon, ProjWeapon, Railgun, ClipWeapon
	Tied To: Kinetic_Root 0
    
    Costs: Metals[600 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[80 * Size * pow(SUBS_COST_CRV, Level)], Labr[16 * Size], Ammo[Size * 25]
    Complexity: 6
    
    vBurst: 2
    vDelay: (4.5 * (1 + decay(Level, 8)) * min((1 + (sqrt(Size) / 20)), 5) * 2 * GAME_RELOAD_MULT) - 0.2
    vDamage: Size * 95 * pow(LEVEL_GAIN_CURVE, Level) * min((1 + (sqrt(Size) / 30)), 3) * GAME_DAMAGE_MULT                        //was 80
    vShotDelay: 0.2
    vTotalDelay: (vShotDelay * (vBurst - 1)) + vDelay
    vRange: (300 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
    vSpeed: vRange * 0.33 * BALLISTIC_PROJ_FACTOR                                                //was progress(100,2*LEVEL_GAIN_CURVE,Level) * min((1 + Size / 5000), 4)
    vEffectiveRange: 0.5
    vMinHit: 0.33
    vAmmoUse: Size * 4

    Provides: TwinHyperBullet with Damage[vDamage], ShotDelay[vShotDelay],
        Delay[vDelay], ClipSize[vBurst], AmmoUse[vAmmoUse], Range[vRange], Speed[vSpeed], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 25]

    Requires:
        To Run:
            Control[30 * Size]

    Hints: 	Alpha[vDamage * vBurst], Ammo[Size * 25],AmmoUse[(-1 * vAmmoUse * vBurst) / vTotalDelay],DPS[(vDamage * vBurst) / vTotalDelay],Local/Range[vRange], Local/DMGperShot[vDamage],Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vTotalDelay], Local/EffRange[vEffectiveRange * vRange],Local/MinHit[vMinHit],Local/ClipDelay[vDelay], Local/Clip[vBurst]			


System: GraviticAccelerator
    Name: #SS_GRAVACCELERATOR_NAME
    Description: #SS_GRAVACCELERATOR_DESC
    Appearance: GraviticAccelerator
	Explosion: subsystem_destroyed

	Available: Techs.Kinetic_Root.Level >= 0
	Level: Techs.Kinetic_Root.Level
	
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 200 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
    
    Tags: Weapon, ProjWeapon
	Tied To: Kinetic_Root 0
    
    Costs: Metals[300 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[40 * Size * pow(SUBS_COST_CRV, Level)], Labr[8 * Size], Ammo[Size * 10]
    Complexity: 2.5
    
    vDamage: Size * 125 * pow(LEVEL_GAIN_CURVE, Level) * min((1 + (sqrt(Size) / 30)), 3) * GAME_DAMAGE_MULT                            //was 120
    vDelay: 7 * (1 + decay(Level, 8)) * min((1 + (sqrt(Size) / 20)), 5) * GAME_RELOAD_MULT
    vDeviation: 0.1
    vRange: (250 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
    vEffectiveRange: 1
    vMinHit: 1
    vAmmoUse: 0.25 * Size

    Provides: RelativisticWeapon with Damage[vDamage], Delay[vDelay], AmmoUse[vAmmoUse],
        Range[vRange], Deviation[vDeviation], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 10]

    Requires:
        To Run:
            Control[20 * Size]
    
    Consumes:
        To Run:
            Power[Size * 40]

    Hints: Alpha[vDamage], Ammo[Size * 10], AmmoUse[-1 * vAmmoUse / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/Delay[vDelay]
    

System: AutocannonBattery
    Name: #SS_AUTOCANBATT_NAME
    Description: #SS_AUTOCANBATT_DESC
    Appearance: AutoCannon
	Explosion: subsystem_destroyed
	
	Available: Techs.Kinetic_Root.Level >= 0
	Level: Techs.Kinetic_Root.Level
	
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 80 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
    
    Tags: Weapon, ProjWeapon
	Tied To: Kinetic_Root 0
    
    Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[Size * 25]
    Complexity: 1.25
    
    vBurst: 4
    vDelay: 2 * (1 + decay(Level, 8)) * min((1 + (sqrt(Size) / 20)), 5) * GAME_RELOAD_MULT
    vDamage: Size * 15 * pow(LEVEL_GAIN_CURVE, Level) * min((1 + (sqrt(Size) / 30)), 3) * GAME_DAMAGE_MULT
    vShotDelay: 0.1
    vTotalDelay: (vShotDelay * vBurst) + vDelay
    vRange: (160 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
    vSpeed: vRange * 0.33 * BALLISTIC_PROJ_FACTOR                                                                                    //was progress(70,2*LEVEL_GAIN_CURVE,Level) * min((1 + Size / 5000), 3)
    vEffectiveRange: 0.5
    vMinHit: 0.33
    vAmmoUse: 0.5 * Size

    Provides: ProjWeapon2 with Damage[vDamage], ShotDelay[vShotDelay],
        Delay[vDelay], ClipSize[vBurst], AmmoUse[vAmmoUse], Range[vRange], Speed[vSpeed], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 25]

    Requires:
        To Run:
            Control[10 * Size]

    Hints: Alpha[vDamage * vBurst], Ammo[Size * 25], AmmoUse[(-1 * vAmmoUse * vBurst) / vTotalDelay], DPS[(vDamage * vBurst) / vTotalDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit]


System: GatlingTurret
    Name: #SS_GATLINGTURRET_NAME
    Description: #SS_GATLINGTURRET_DESC
    Appearance: GatlingTurret
	Explosion: subsystem_destroyed

	Available: Techs.Kinetic_Root.Level >= 0
	Level: Techs.Kinetic_Root.Level
	
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 80 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
    
    Tags: Weapon, ProjWeapon, PDWeap, Extendable, ClipWeapon
	Tied To: Kinetic_Root 0
    
    Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[Size * 25]
    Complexity: 1.25
    
    vClip: 60				//was 120
    vDelay: (3) * (1 + decay(Level, 8)) * min((1 + (sqrt(Size) / 20)), 5) * GAME_RELOAD_MULT					//was 6
    vDamage: 2.5 * Size * pow(LEVEL_GAIN_CURVE, Level) * min((1 + (sqrt(Size) / 30)), 3) * GAME_DAMAGE_MULT                            //was 1.5
    vShotDelay: 0.1
    vTotalDelay: (vShotDelay * vClip) + vDelay
    vRange: (120 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
    vSpeed: vRange * 0.8 * BALLISTIC_PROJ_FACTOR                                                                    //was progress(50,2*LEVEL_GAIN_CURVE,Level) * min((1 + Size / 5000), 2)
    vEffectiveRange: 0.75
    vMinHit: 0.33
    vAmmoUse: 0.1 * Size
    
    vEffectivity: (Scale / Object.Scale) / 20
    
    Provides: PointDefense with Effectivity[vEffectivity]
    
    Provides: GatlingGun with 
        Damage[vDamage], ShotDelay[vShotDelay],
        Delay[vDelay], ClipSize[vClip], AmmoUse[vAmmoUse], Range[vRange], Speed[vSpeed], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    
    Provides: AmmoStorage with Amount[Size * 25]

    Requires:
        To Run:
            Control[10 * Size]

    Hints: 	Alpha[vDamage * vClip], Ammo[Size * 25], AmmoUse[(-1 * vAmmoUse) / vShotDelay], DPS[(vDamage * vClip)/ vTotalDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse],  Local/ProjSpeed[vSpeed], Local/Delay[vTotalDelay], Local/ClipDelay[vDelay], Local/Clip[vClip], PointDefense[vEffectivity], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit]
        

System: ThermalPenetrator
    Name: #SS_THERMPENET_NAME
    Description: #SS_THERMPENET_DESC
    Appearance: PhasedRailgun
	Explosion: subsystem_destroyed
	
	Available: Techs.Kinetic_Root.Level >= 0
	Level: Techs.Kinetic_Root.Level
	
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 80 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
    
    Tags: Weapon, ProjWeapon
	Tied To: Kinetic_Root 0
    
    Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[Size * 25]
    Complexity: 2.75
    
    vDamage: Size * 40 * pow(LEVEL_GAIN_CURVE, Level) * min((1 + (sqrt(Size) / 30)), 3) * GAME_DAMAGE_MULT        //was Size * 24
    vDelay: 2.5 * (1 + decay(Level, 8)) * min((1 + (sqrt(Size) / 20)), 5) * GAME_RELOAD_MULT
    vDeviation: 0.1
    vRange: (200 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
    vSpeed: vRange * 0.33 * BALLISTIC_PROJ_FACTOR                                                                                    //was progress(60,2*LEVEL_GAIN_CURVE,Level) * min((1 + Size / 5000), 3)
    vEffectiveRange: 0.5
    vMinHit: 0.33
    vAmmoUse: 4 * Size
    
    Provides: PhasedBullet with Damage[vDamage], Delay[vDelay], AmmoUse[vAmmoUse],    Range[vRange], Speed[vSpeed], Deviation[vDeviation], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 25]

    Consumes:
        To Run:
            Power[20 * Size]
    
    Requires:
        To Run:
            Control[25 * Size]

    Hints: Alpha[vDamage], Ammo[Size * 25], AmmoUse[-1 * vAmmoUse / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit]


System: FighterChaingun
	Name: #SS_FCHAINGUN_NAME
	Description: #SS_FCHAINGUN_DESC
	Appearance: FighterChaingun

	Available: Techs.Kinetic_Root.Level >= 0
	Level: Techs.Kinetic_Root.Level
	
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 50 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, ProjectileWeapon
	Tied To: Kinetic_Root 0
	
	vDamage: Size * 55 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: 0.6 * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vRange: (100 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: vRange * 0.75																					//was progress(50,2*LEVEL_GAIN_CURVE,Level)
	vAmmoStorage: Size * 25 * (1 + (0.2 * Level))
	vEffectiveRange: 0.7
	vMinHit: 0.5
	vAmmoUse: Size	
	
	Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[vAmmoStorage]
	Complexity: 1
		
	Provides: FighterProjWeapon with Damage[vDamage], Delay[vDelay], AmmoUse[vAmmoUse], Deviation[0],
		Range[vRange], Speed[vSpeed], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
	
	Provides: AmmoStorage with Amount[vAmmoStorage]

	Requires:
		To Run:
			Control[10 * Size]

	Hints: Alpha[vDamage], Ammo[vAmmoStorage], AmmoUse[(-1 * vAmmoUse) / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit]
