System: ConstructionBay
    Name: #SS_BUILDBAY_NAME
    Description: #SS_BUILDBAY_DESC
    Appearance: ConstructionBay
	Explosion: subsystem_destroyed
    
    Tags: BuildBay, BuildsShips, PostOrder:Fetch:Metals:0.3, PostOrder:Fetch:Electronics:0.3, PostOrder:Fetch:AdvParts:0.3, PostOrder:Fetch:Fuel:0.3, PostOrder:Fetch:Ammo:0.3, Storage:Resources
    Tied To: ShipConstruction 1
    
    Available: Techs.ShipConstruction.Level > 0
    Level: Techs.ShipConstruction.Level
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 10 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 5 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
    
    vEcoStore: Size * 120 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))        //was Size * 40
    
    Costs: Metals[20 * Size * pow(SUBS_COST_CRV, Level)], Electronics[5 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[1 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
    Complexity: 0.5
    
    Tick Rate: 1
    
    Provides: StructAmmoStorage with
        Amount[vEcoStore * 0.175]
    
    Provides: StructFuelStorage with
        Amount[vEcoStore * 0.175]
    
    Provides: AdvPartsStorage with
        Amount[vEcoStore * 0.175]
    
    Provides: ElecStorage with
        Amount[vEcoStore * 0.175]
    
    Provides: MetalStorage with
        Amount[vEcoStore * 0.3]

    Provides: AutoLabor with
        Rate[Size * 2 * pow(LEVEL_GAIN_CURVE, Level)], Store[Size * 10 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),45))]

    Hints: EcoStore[vEcoStore]

System: Refinery
    Name: #SS_REFINERY_NAME
    Description: #SS_REFINERY_DESC
    Appearance: MetalRefinery
	Explosion: subsystem_destroyed
    
    Tags: Deposit:Metals
    Tied To: Metallurgy 4
    
    Available: Techs.Metallurgy.Level > 3
    Level: Techs.Metallurgy.Level
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 30 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 15 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

    Costs: Metals[80 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size * pow(SUBS_COST_CRV, Level)]
    
    Tick Rate: 4

    vCargoStore: Size * 10 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
    vFabRate: Size * 6 * (pow(LEVEL_GAIN_CURVE, Level) + RES_BASE_FACT) * RES_GEN_MULT  // vFabRate gets altered by trait no_bank!
    
    Provides: Cargo with
        Amount[vCargoStore]

    Provides: RefineMetal with
        Rate[vFabRate], OreCostPer[1]

    Consumes:
        To Run: Power[10 * Size]

    Requires:
        To Run: Control[10 * Size]

    Hints: Cargo[vCargoStore], MetalCost[vFabRate], OreUsage[-1 * vFabRate]

System: ElectsFab
    Name: #SS_ELECTSFAB_NAME
    Description: #SS_ELECTSFAB_DESC
    Appearance: ElectronicsFabricator
	Explosion: subsystem_destroyed
    
    Tags: Deposit:Electronics
    Tied To: Metallurgy 4
    
    Available: Techs.Metallurgy.Level > 3
    Level: Techs.Metallurgy.Level
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 30 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 15 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

    Costs: Metals[80 * Size * pow(SUBS_COST_CRV, Level)], Electronics[60 * Size * pow(SUBS_COST_CRV, Level)], Labr[15 * Size]
    
    Tick Rate: 4

    vCargoStore: Size * 10 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
    vFabRate: Size * 3 * (pow(LEVEL_GAIN_CURVE, Level) + RES_BASE_FACT) * RES_GEN_MULT   // vFabRate gets altered by trait no_bank!
    
    Provides: Cargo with
        Amount[vCargoStore]

    Provides: FabElects with
        Rate[vFabRate], MtlCostPer[1]

    Consumes:
        To Run: Power[10 * Size]

    Requires:
        To Run: Control[5 * Size]

    Hints: Cargo[vCargoStore], MetalCost[-1 * vFabRate], ElecsCost[vFabRate]

System: AdvAssembler
    Name: #SS_ADVFAB_NAME
    Description: #SS_ADVFAB_DESC
    Appearance: AdvPartsAssembler
	Explosion: subsystem_destroyed
    
    Tags: Deposit:AdvParts
    Tied To: Metallurgy 4
    
    Available: Techs.Metallurgy.Level > 3
    Level: Techs.Metallurgy.Level
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 30 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 15 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

    Costs: Electronics[60 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[60 * Size * pow(SUBS_COST_CRV, Level)]
    
    Tick Rate: 4

    vCargoStore: Size * 10 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
    vFabRate: Size * 2 * (pow(LEVEL_GAIN_CURVE, Level) + RES_BASE_FACT) * RES_GEN_MULT   // vFabRate gets altered by trait no_bank!
    
    Provides: Cargo with
        Amount[vCargoStore]

    Provides: FabAdvParts with
        Rate[vFabRate], MtlCostPer[1], ElcCostPer[1]

    Consumes:
        To Run: Power[10 * Size]

    Requires:
        To Run: Control[5 * Size]

    Hints: Cargo[vCargoStore], Local/AdvFabRate[vFabRate], MetalCost[-1 * vFabRate], ElecsCost[-1 * vFabRate], AdvCost[vFabRate]
    
System: AmmoProducer
    Name: #SS_AMMOPRO_NAME
    Description: #SS_AMMOPRO_DESC
    Appearance: AmmoFabricator
    Explosion: fuel_cell_explode

    Available: (((Techs.Nanotech.Level > 3) && (Techs.Metallurgy.Level > 3)) || Traits.remnants) && not(Traits.no_nanotech)
    Level: floor(weight(Techs.Nanotech.Level, 0.5, Techs.Metallurgy.Level, 0.5))
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 40 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 100 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

    Tags: Deposit:Ammo
    Tied To: Nanotech 4, Metallurgy 4
   
    Costs: Metals[500 * Size * pow(SUBS_COST_CRV, Level)], Electronics[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[100 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size], Ammo[Size * 25 * (2 - decay(pow(LEVEL_GAIN_CURVE, Level), 35))]
    Complexity: 10
   
    Tick Rate: 2
      
    vAmmoRate: Size * 2  * (pow(LEVEL_GAIN_CURVE, Level) + RES_BASE_FACT) * RES_GEN_MULT                                  //was Level), 25)
	vAmmoStore: Size * 10 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
    vMetalCost: 0.5
    
    Provides: AmmoFab with
        Rate[vAmmoRate],
        MetalCost[vMetalCost]
    
    Provides: AmmoStorage with
        Amount[vAmmoStore]
        
    Consumes:
    To Run: Power[15 * Size]                                                                                //was 200 * Size
      
    Requires:
        To Run: Control[15 * Size]

    Hints: AmmoUse[vAmmoRate],MetalCost[-1 * vMetalCost * vAmmoRate], Ammo[vAmmoStore]

System: H3Refinery
    Name: #SS_H3REF_NAME
    Description: #SS_H3REF_DESC
    Appearance: H3Refinery
    Explosion: subsys_powerexplode lasting 0.5
    
    Tags: Deposit:Fuel
    Tied To: BeamWeapons 4, Chemistry 4    
    
    Available: ((Techs.BeamWeapons.Level > 3) && (Techs.Chemistry.Level > 3))
    Level: Techs.Chemistry.Level
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 20 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 20 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6) * (if(Object.Scale <= 1, 0.5, 1))
    
    Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[5 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Fuel[Size * 10]
    Complexity: 0.6

    Tick Rate: 1
    
    vRate: Size * 2 * (pow(LEVEL_GAIN_CURVE, Level) + RES_BASE_FACT) * RES_GEN_MULT 
    vCost: 2
	vFuelStore: Size * 10 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
    
    Provides: RefineH3 with
        Rate[vRate],
        H3CostPer[vCost]
    
    Provides: FuelStorage with
        Amount[vFuelStore]
        
    Consumes:
        To Run: 
            Power[15 * Size]
			
    Requires:
        To Run: Control[15 * Size]

    Hints: Fuel[Size * 10], H3Usage[-1 * vCost * vRate], FuelUse[vRate]

System: Exporter
    Name: #SS_EXPORTER_NAME
    Description: #SS_EXPORTER_DESC

    Appearance: ExportBay
	Explosion: subsystem_destroyed
    
    Tied To: Economics 4
    Tags: BankAccess
    
    Available: Techs.Economics.Level > 3 && not(Traits.no_bank)
    Level: Techs.Economics.Level
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 30 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 15 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

    Costs: Metals[80 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size]
    
    Tick Rate: 4

    vCargoStore: Size * 10 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
    vRate: Size * 4 * pow(LEVEL_GAIN_CURVE, Level)   // how does this behave when trait no_bank is selected?
    
    Provides: StructAmmoStorage with
        Amount[vCargoStore * 0.175]
    
    Provides: StructFuelStorage with
        Amount[vCargoStore * 0.175]
    
    Provides: AdvPartsStorage with
        Amount[vCargoStore * 0.175]
    
    Provides: ElecStorage with
        Amount[vCargoStore * 0.175]
    
    Provides: MetalStorage with
        Amount[vCargoStore * 0.3]

    Provides: GABankExport with Amount[vRate], Mode[0]

    Requires:
        To Run: Control[10 * Size]

    Hints: EcoStore[vCargoStore], Local/BankExport[vRate]
    
System: MetalExporter
    Name: #SS_MTL_EXPORTER_NAME
    Description: #SS_MTL_EXPORTER_DESC

    Appearance: ExportBayMetal
	Explosion: subsystem_destroyed
    
    Tied To: Economics 4
    Tags: BankAccess
    
    Available: Techs.Economics.Level > 3 && not(Traits.no_bank)
    Level: Techs.Economics.Level
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 30 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 15 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

    Costs: Metals[80 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size]
    
    Tick Rate: 4

    vCargoStore: Size * 10 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
    vRate: Size * 1 * pow(LEVEL_GAIN_CURVE, Level)   // how does this behave when trait no_bank is selected?
    
    
    Provides: MetalStorage with
        Amount[vCargoStore]

    Provides: GABankExport with Amount[vRate], Mode[1]

    Requires:
        To Run: Control[10 * Size]

    Hints: MtlStore[vCargoStore], Local/BankExport[vRate]

System: ElectsExporter
    Name: #SS_ELC_EXPORTER_NAME
    Description: #SS_ELC_EXPORTER_DESC

    Appearance: ExportBayElecs
	Explosion: subsystem_destroyed
    
    Tied To: Economics 4
    Tags: BankAccess
    
    Available: Techs.Economics.Level > 3 && not(Traits.no_bank)
    Level: Techs.Economics.Level
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 30 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 15 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

    Costs: Metals[80 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size]
    
    Tick Rate: 4

    vCargoStore: Size * 10 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
    vRate: Size * 1 * pow(LEVEL_GAIN_CURVE, Level)   // how does this behave when trait no_bank is selected?
    
    Provides: ElecStorage with
        Amount[vCargoStore]
    
    Provides: GABankExport with Amount[vRate], Mode[2]

    Requires:
        To Run: Control[10 * Size]

    Hints: ElecStorage[vCargoStore], Local/BankExport[vRate]

System: PartsExporter
    Name: #SS_PART_EXPORTER_NAME
    Description: #SS_PART_EXPORTER_DESC

    Appearance: ExportBayParts
	Explosion: subsystem_destroyed
    
    Tied To: Economics 4
    Tags: BankAccess
    
    Available: Techs.Economics.Level > 3 && not(Traits.no_bank)
    Level: Techs.Economics.Level
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 30 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 15 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

    Costs: Metals[80 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size]
    
    Tick Rate: 4

    vCargoStore: Size * 10 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
    vRate: Size * 1 * pow(LEVEL_GAIN_CURVE, Level)   // how does this behave when trait no_bank is selected?
    
    Provides: AdvPartsStorage with
        Amount[vCargoStore]
    
    Provides: GABankExport with Amount[vRate], Mode[3]

    Requires:
        To Run: Control[10 * Size]

    Hints: AdvStore[vCargoStore], Local/BankExport[vRate]    
    
System: Importer
    Name: #SS_IMPORTER_NAME
    Description: #SS_IMPORTER_DESC

    Appearance: ExportBay
	Explosion: subsystem_destroyed
    
    Tied To: Economics 4
    Tags: BankAccess, ImportBay
    
    Available: Techs.Economics.Level > 3 && not(Traits.no_bank)
    Level: Techs.Economics.Level
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 30 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 15 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

    Costs: Metals[80 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size]
    
    Tick Rate: 4

    vCargoStore: Size * 10 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
    vRate: Size * 6 * pow(LEVEL_GAIN_CURVE, Level)

    Provides: StructAmmoStorage with
        Amount[vCargoStore * 0.175]
    
    Provides: StructFuelStorage with
        Amount[vCargoStore * 0.175]
    
    Provides: AdvPartsStorage with
        Amount[vCargoStore * 0.175]
    
    Provides: ElecStorage with
        Amount[vCargoStore * 0.175]
    
    Provides: MetalStorage with
        Amount[vCargoStore * 0.3]
        
    Provides: BankImport with Rate[vRate]
    
    Requires:
        To Run: Control[10 * Size]

    Hints: EcoStore[vCargoStore], Local/ImportTrade[vRate]
    
System: AmmoFabricator
    Name: #SS_AMMOFAB_NAME
    Description: #SS_AMMOFAB_DESC
    Appearance: AmmoImporter
    Explosion: fuel_cell_explode

    Available: (((Techs.ShipSystems.Level > 2) && (Techs.Economics.Level > 2)) || Traits.remnants)
    Level: floor(weight(Techs.ShipSystems.Level, 0.3, Techs.Economics.Level, 0.7))
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 40 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 100 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)

    Tags: BankAccess, Restrict:FighterBomber, Storage:Ammo
    Tied To: ShipSystems 3, Economics 3
   
    Costs: Metals[500 * Size * pow(SUBS_COST_CRV, Level)], Electronics[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[100 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size], Ammo[Size * 25 * (2 - decay(pow(LEVEL_GAIN_CURVE, Level), 35))]
    Complexity: 10
   
    Tick Rate: 2
      
    vAmmoRate: Size * 2 * (2 - (decay(pow(LEVEL_GAIN_CURVE,Level), 35)))                                            //was Level), 25)
    vAmmoStore: Size * 25 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))

    Provides: AmmoImport with
        Rate[vAmmoRate]
    
    Provides: AmmoStorage with
        Amount[vAmmoStore]
        
    Requires:
    To Run:
    Control[10 * Size]
         
    Hints: AmmoUse[vAmmoRate], Ammo[vAmmoStore]    

System: MiningLaser
    Name: #SS_MININGLASER_NAME
    Description: #SS_MININGLASER_DESC
    Appearance: MiningLaser
	Explosion: subsystem_destroyed
    
    Tags: Miner, Tool:Miner, Work:Miner, Deposit:Ore
    Tied To: BeamWeapons 1
    
    Available: Techs.BeamWeapons.Level > 0
    Level: Techs.BeamWeapons.Level
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 80 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
    
    Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[40 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[40 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
    Complexity: 1.6
    
    vRate: Size * 5 * pow(LEVEL_GAIN_CURVE, Level)
    vDelay: max(5, 10 * decay(pow(LEVEL_GAIN_CURVE,Level),45)) * GAME_RELOAD_MULT
    vDuration: 5
    vPowCost: Size * 40
    
    Provides: MiningLaser with Rate[vRate], Delay[vDelay], Duration[vDuration], PowCost[vPowCost]

    Requires:
        To Run:
            Control[10 * Size]
    
    Hints: Power[-1 * vPowCost], OreUsage[(vRate * vDuration)/vDelay]
    
    
System: H3Harvester
    Name: #SS_H3HARVESTER_NAME
    Description: #SS_H3HARVESTER_DESC
    Appearance: H3Beam
	Explosion: subsystem_destroyed
    
    Tags: Harvester, Tool:Harvester, Work:Harvester
    Tied To: BeamWeapons 4, Chemistry 4
    
    Available: ((Techs.BeamWeapons.Level > 3) && (Techs.Chemistry.Level > 3))
    Level: Techs.Chemistry.Level
    
    Size: Scale
    HPLevel: Techs.Materials.Level-1 As Level
    Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
    Mass: 80 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)    
    
    Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[40 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[40 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
    Complexity: 1.6    
    
    vRate: Size * 5 * pow(LEVEL_GAIN_CURVE, Level)
    vDelay: max(5, 10 * decay(pow(LEVEL_GAIN_CURVE,Level),45)) * GAME_RELOAD_MULT
    vDuration: 5
    vPowCost: Size * 60
    
    Provides: H3Scoop with Rate[vRate], Delay[vDelay], Duration[vDuration], PowCost[vPowCost]

    Requires:
        To Run:
            Control[15 * Size]
			
    Hints: Power[-1 * vPowCost], H3Usage[(vRate * vDuration)/vDelay]