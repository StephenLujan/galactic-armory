System: FighterRockets
	Name: #SS_FROCKETS_NAME
	Description: #SS_FROCKETS_DESC
	Appearance: FighterRockets

	Available: Techs.Missiles.Level > 0 && not(Traits.no_missile)
	Level: Techs.Missiles.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 50 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, WarheadWeapon, Extendable, ClipWeapon
	Tied To: Missiles 1
	
	vClip: 8
	vClipDelay: (2) * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 50)) * GAME_RELOAD_MULT
	vDamage: 50 * Size * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: (0.3) * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 50))
	vTotalDelay: (vDelay * vClip) + vClipDelay
	vRange: (120 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vAmmoStorage: Size * 24 * (1 + (0.2 * Level))
	vSpeed: (vRange * 0.2) + progress(30,2*LEVEL_GAIN_CURVE,Level)
	
	Costs: Metals[150 * Size * pow(SUBS_COST_CRV, Level)], Electronics[50 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[vAmmoStorage]
	Complexity: 1
		
	Triggerable: PDEffect: PointDefenseTriggered
	
	Provides: LargeProjWeaponRack with 
		Damage[vDamage], ShotDelay[vDelay],
		Delay[vClipDelay], ClipSize[vClip], Range[vRange], AmmoUse[0.5 * Size], Speed[vSpeed]

	Provides: AmmoStorage with Amount[vAmmoStorage]

	Requires:
		To Run:
			Control[10 * Size]
	
	Hints: Alpha[vDamage * vClip], Ammo[vAmmoStorage], AmmoUse[(-0.5 * Size * vClip) / vTotalDelay], DPS[(vDamage * vClip) / vTotalDelay], Local/DMGperShot[vDamage], Local/Range[vRange], Local/Delay[vTotalDelay], Local/ClipDelay[vClipDelay], Local/Clip[vClip], Local/AmmoperShot[0.5 * Size]


System: FighterTorpedo
	Name: #SS_FTORPEDO_NAME
	Description: #SS_FTORPEDO_DESC
	Appearance: FighterTorpedo

	Available: (Techs.Missiles.Level > 4) || Traits.remnants && not(Traits.no_missile)
	Level: Techs.Missiles.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 50 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, Torpedo , WarheadWeapon
	Tied To: Missiles 5

	vDamage: Size * 430 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: 7.0 * (max(5, 10 * decay(pow(LEVEL_GAIN_CURVE,Level),15) * decay(Size,50))) * GAME_RELOAD_MULT
	vRange: (150 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: (vRange * 0.2) + progress(5,2*LEVEL_GAIN_CURVE,Level)
	vAmmoStorage: Size * 24 * (1 + (0.2 * Level))
	
	Costs: Metals[180 * Size * pow(SUBS_COST_CRV, Level)], Electronics[50 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[vAmmoStorage]
	Complexity: 1.2	
	
	Triggerable: PDEffect: PointDefenseTriggered
	
	Provides: Torpedo with Damage[vDamage], Deviation[0], Delay[vDelay], AmmoUse[12 * Size], Range[vRange], Speed[vSpeed]

	Provides: AmmoStorage with Amount[vAmmoStorage]

	Requires:
		To Run:
			Control[10 * Size]
	
	Hints: Alpha[vDamage], Ammo[vAmmoStorage], AmmoUse[(-12 * Size) / vDelay], Local/AmmoperShot[-12 * Size], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/ProjSpeed[vSpeed], Local/Delay[vDelay]
	
	
System: FighterLaser
	Name: #SS_FLASER_NAME
	Description: #SS_FLASER_DESC
	Appearance: FighterLaser
	
	Available: Techs.BeamWeapons.Level > 0 && not(Traits.no_energy)
	Level: Techs.BeamWeapons.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 80 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, Laser, EnergyWeapon
	Tied To: BeamWeapons 1
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[25 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1.3
	
	vDamage: Size * 65 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: (0.8) * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vPowCost: Size * 30 * decay(pow(LEVEL_GAIN_CURVE,Level),22.5)
	vRange: (90 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vEffectiveRange: 0.7
	vMinDmg: 0.5	
	vWasteHeat: Size * 0.1 * (vDelay) * min((1 + (sqrt(Size) / 20)), 3) * (1 / GAME_RELOAD_MULT) * GAME_HEAT_MULT
		
	Provides: FighterEnergyWeapon with Damage[vDamage], Delay[vDelay], Duration[0.5], PowCost[vPowCost], Range[vRange],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[10 * Size]
	
	Hints: Alpha[vDamage * 0.5], Power[-1 * vPowCost], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage / 2], Local/HitsperShot[2], Local/Duration[0.5], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]

System: FighterLaserOvercharged
	Name: #SS_FLASEROC_NAME
	Description: #SS_FLASEROC_DESC
	Appearance: FighterOverchargeLaser
	
	Available: Techs.BeamWeapons.Level > 7 && not(Traits.no_energy)
	Level: Techs.BeamWeapons.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 80 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, Laser, EnergyWeapon
	Tied To: BeamWeapons 8
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[25 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1.3
	
	vDamage: Size * 100 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: (4) * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vPowCost: Size * 120 * decay(pow(LEVEL_GAIN_CURVE,Level),22.5)
	vRange: (120 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vEffectiveRange: 0.7
	vMinDmg: 0.5
	vWasteHeat: Size * 0.8 * (vDelay) * min((1 + (sqrt(Size) / 20)), 3) * (1 / GAME_RELOAD_MULT) * GAME_HEAT_MULT
		
	Provides: FighterEnergyWeaponLarge with Damage[vDamage], Delay[vDelay], Duration[1.0], PowCost[vPowCost], Range[vRange],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[25 * Size]
	
	Hints: Alpha[vDamage], Power[-1 * vPowCost], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage / 4], Local/HitsperShot[4], Local/Duration[1.0], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]	
	
System: FighterChaingun
	Name: #SS_FCHAINGUN_NAME
	Description: #SS_FCHAINGUN_DESC
	Appearance: FighterChaingun

	Available: Techs.ProjWeapons.Level > 0 && not(Traits.no_ballistics)
	Level: Techs.ProjWeapons.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 50 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, ProjectileWeapon
	Tied To: ProjWeapons 1
	
	vDamage: Size * 55 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: 0.6 * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vRange: (100 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: vRange * 0.75																					//was progress(50,2*LEVEL_GAIN_CURVE,Level)
	vAmmoStorage: Size * 25 * (1 + (0.2 * Level))
	vEffectiveRange: 0.7
	vMinHit: 0.5
	vAmmoUse: Size	
	
	Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[vAmmoStorage]
	Complexity: 1
		
	Provides: FighterProjWeapon with Damage[vDamage], Delay[vDelay], AmmoUse[vAmmoUse], Deviation[0],
		Range[vRange], Speed[vSpeed], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
	
	Provides: AmmoStorage with Amount[vAmmoStorage]

	Requires:
		To Run:
			Control[10 * Size]

	Hints: Alpha[vDamage], Ammo[vAmmoStorage], AmmoUse[(-1 * vAmmoUse) / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit]
	

System: FighterPrecisionBomb
	Name: #SS_FPRECBOMB_NAME
	Description: #SS_FPRECBOMB_DESC
	Appearance: FighterPrecBomb
	Available: ((Techs.ProjWeapons.Level > 2) && (Techs.Sensors.Level > 0)) || Traits.remnants && not(Traits.no_missile)
	Level: floor(weight(Techs.ProjWeapons.Level, 0.5, Techs.Sensors.Level, 0.5))
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 50 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, Bomb
	Tied To: ProjWeapons 3, Sensors 1
	
	vDamage: Size * 180 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: 6 * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vRange: (50 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: progress(5,2*LEVEL_GAIN_CURVE,Level)
	vAmmoStorage: Size * 24 * (1 + (0.2 * Level))
	vEffectiveRange: 1
	vMinHit: 1
	vAmmoUse: Size * 6	
	
	Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[vAmmoStorage]
	Complexity: 2.0
		
	Provides: ArmorPiercingBomb with Damage[vDamage], Deviation[0], Delay[vDelay], AmmoUse[vAmmoUse], Range[vRange], Speed[vSpeed], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
	
	Provides: AmmoStorage with Amount[vAmmoStorage]

	Requires:
		To Run:
			Control[25 * Size]

	Hints: Alpha[vDamage], Ammo[vAmmoStorage], AmmoUse[(-1 * vAmmoUse) / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay]
	
	
System: FighterPFW
	Name: #SS_FIGHTERPFW_NAME
	Description: #SS_FIGHTERPFW_DESC
	Appearance: FighterPFW
	Available: ((Techs.EnergyPhysics.Level > 5) && (Techs.Shields.Level > 5)) || Traits.remnants && not(Traits.no_energy)
	Level: floor(weight(Techs.EnergyPhysics.Level, 0.5, Techs.Shields.Level, 0.5))
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 80 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, EnergyWeapon
	Tied To: EnergyPhysics 6, Shields 6
	
	Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 3
	
	vDamage: Size * 320 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: 4 * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vRange: (70 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: vRange * 0.75
	vWasteHeat: Size * 0.2 * min((1 + (sqrt(Size) / 20)), 3) * (1 / GAME_RELOAD_MULT) * GAME_HEAT_MULT
	vPowCost: Size * 40

	Provides: PolarizingFluxWeapon with Damage[vDamage], Deviation[0], Delay[vDelay], PowerUse[vPowCost], Duration[1], 
		Range[vRange], Speed[vSpeed], wasteHeat[vWasteHeat]
	
	Requires:
		To Run:
			Control[25 * Size]

	Hints: Alpha[vDamage], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Power[-1 * vPowCost / vDelay], Local/ProjSpeed[vSpeed], Local/Delay[vDelay], WasteHeat[vWasteHeat / vDelay]
	
System: FighterAdvancedBomb
	Name: #SS_FADVBOMB_NAME
	Description: #SS_FADVBOMB_DESC
	Appearance: FighterAdvBomb
	Available: ((Techs.ProjWeapons.Level > 6) || Traits.remnants) && not(Traits.code_of_honor) 
	Level: Techs.ProjWeapons.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 50 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, Bomb
	Tied To: ProjWeapons 7
	
	vDamage: Size * 240 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: 6 * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vRange: (65 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: progress(10,2*LEVEL_GAIN_CURVE,Level)
	vAmmoStorage: Size * 24 * (1 + (0.2 * Level))
	vAmmoUse: Size * 4	
	
	Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[vAmmoStorage]
	Complexity: 4.0
		
	Provides: AdvancedBomb with Damage[vDamage], Deviation[0], Delay[vDelay], AmmoUse[vAmmoUse], PowerUse[10 * Size], Duration[1], 
		Range[vRange], Speed[vSpeed]
	
	Provides: AmmoStorage with Amount[vAmmoStorage]

	Requires:
		To Run:
			Control[10 * Size]

	Hints: Alpha[vDamage], Ammo[vAmmoStorage], AmmoUse[(-1 * vAmmoUse) / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Power[(-10 * Size) / vDelay], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay]
	
System: FighterAAMissile
	Name: #SS_AAMISSILE_NAME
	Description: #SS_AAMISSILE_DESC
	Appearance: AAMissile

	Available: ((Techs.Missiles.Level > 4) && (Techs.Sensors.Level > 4)) || Traits.remnants && not(Traits.no_missile)
	Level: floor(weight(Techs.Missiles.Level, 0.5, Techs.Sensors.Level, 0.5))
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 50 * Size
	
	Tags: Weapon, FighterWeapon, Require:FighterHull , WarheadWeapon
	Tied To: Missiles 5, Sensors 5
	
	vMissileDamage: Size * 160 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: 3.0 * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vRange: (260 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: (vRange * 0.1) + progress(50,2*LEVEL_GAIN_CURVE,Level)
	vAmmoStorage: Size * 24 * (1 + (0.2 * Level))
	vAmmoUse: Size * 3
	
	Costs: Metals[180 * Size * pow(SUBS_COST_CRV, Level)], Electronics[50 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[vAmmoStorage]
	Complexity: 1.2 * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
		
	Triggerable: PDEffect: PointDefenseTriggered
	
	Provides: AAMissile with Damage[vMissileDamage], Deviation[0], Delay[vDelay], AmmoUse[vAmmoUse], Range[vRange], Speed[vSpeed]

	Provides: AmmoStorage with Amount[vAmmoStorage]

	Requires:
		To Run:
			Control[10 * Size]
	
	Hints: Alpha[vMissileDamage], Ammo[vAmmoStorage], AmmoUse[(-1 * vAmmoUse) / vDelay], Local/AmmoperShot[-1 * vAmmoUse], DPS[vMissileDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vMissileDamage], Local/ProjSpeed[vSpeed], Local/Delay[vDelay]
	
	
System: HeavyBomb
	Name: #SS_HEAVYBOMB_NAME
	Description: #SS_HEAVYBOMB_DESC
	Appearance: HeavyBomb
	Available: (Techs.ProjWeapons.Level > 4) || Traits.remnants 
	Level: Techs.ProjWeapons.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 100 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, BomberWeapon, Require:BomberHull, Bomb
	Tied To: ProjWeapons 5
	
	vDamage: Size * 600 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: 5 * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vRange: (55 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: progress(10,2*LEVEL_GAIN_CURVE,Level)
	vAmmoStorage: Size * 24 * (1 + (0.2 * Level))
	vAmmoUse: Size * 8	
	
	Costs: Metals[300 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[vAmmoStorage]
	Complexity: 2.0
		
	Provides: HeavyBomb with Damage[vDamage], Deviation[0], Delay[vDelay], AmmoUse[vAmmoUse], Range[vRange], Speed[vSpeed]
	
	Provides: AmmoStorage with Amount[vAmmoStorage]

	Requires:
		To Run:
			Control[10 * Size]

	Hints: Alpha[vDamage], Ammo[vAmmoStorage], AmmoUse[(-1 * vAmmoUse) / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay]

System: EMPBomb
	Name: #SS_EMPBOMB_NAME
	Description: #SS_EMPBOMB_DESC
	Appearance: EMPBomb
	Available: ((Techs.EnergyPhysics.Level > 8) && (Techs.Shields.Level > 8)) || Traits.remnants
	Level: floor(weight(Techs.EnergyPhysics.Level, 0.5, Techs.Shields.Level, 0.5))
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 100 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, BomberWeapon, Require:BomberHull, WMD
	Tied To: EnergyPhysics 9, Shields 9
	
	vDamage: Size * 600 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vAoE_Range: min(30 + (3 * (Size * pow(LEVEL_GAIN_CURVE, Level))), 60)
	vDelay: 5 * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vRange: (80 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: progress(10,2*LEVEL_GAIN_CURVE,Level)
	vAmmoStorage: Size * 24 * (1 + (0.2 * Level))
	vAmmoUse: Size * 6	
	
	Costs: Metals[300 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[vAmmoStorage]
	Complexity: 2.0
		
	Provides: EMPBombPFWTrigger with Damage[vDamage], AoE_Range[vAoE_Range], Delay[vDelay], AmmoUse[vAmmoUse], Range[vRange], Speed[vSpeed], Deviation[0]
	
	Triggerable: PFWAreaDamage: PFWAreaDamageTriggered with AoE_Damage[vDamage], AoE_Range[vAoE_Range]
	
	Provides: AmmoStorage with Amount[vAmmoStorage]

	Requires:
		To Run:
			Control[10 * Size]

	Hints: Alpha[vDamage], Ammo[vAmmoStorage], AmmoUse[(-1 * vAmmoUse) / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AoERange[vAoE_Range], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay]

System: BomberHeavyTorpedo
	Name: #SS_BOMBERTORPEDO_NAME
	Description: #SS_BOMBERTORPEDO_DESC
	Appearance: BomberHeavyTorpedo

	Available: (Techs.Missiles.Level > 6) || Traits.remnants && not(Traits.no_missile)
	Level: Techs.Missiles.Level
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 100 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, BomberWeapon, Require:BomberHull, Torpedo , WarheadWeapon
	Tied To: Missiles 7
	
	vDamage: Size * 1600 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: 14.0 * (max(5, 10 * decay(pow(LEVEL_GAIN_CURVE,Level),15) * decay(Size,50))) * GAME_RELOAD_MULT
	vRange: (270 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: (vRange * 0.1) + progress(6,2*LEVEL_GAIN_CURVE,Level)
	vAmmoStorage: Size * 24 * (1 + (0.2 * Level))
	
	Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], Electronics[50 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[vAmmoStorage]
	Complexity: 2
	
	Triggerable: PDEffect: PointDefenseTriggered
	
	Provides: HeavyTorpedo with Damage[vDamage], Deviation[0], Delay[vDelay], AmmoUse[24 * Size], Range[vRange], Speed[vSpeed]

	Provides: AmmoStorage with Amount[vAmmoStorage]

	Requires:
		To Run:
			Control[10 * Size]
	
	Hints: Alpha[vDamage], Ammo[vAmmoStorage], AmmoUse[(-24 * Size) / vDelay], Local/AmmoperShot[-24 * Size], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/ProjSpeed[vSpeed], Local/Delay[vDelay]

System: DualPlasmaBlaster
	Name: #SS_PLASMABLASTER_NAME
	Description: #SS_PLASMABLASTER_DESC
	Appearance: DualPlasmaBlaster

	Available: ((Techs.ProjWeapons.Level > 5) && (Techs.EnergyPhysics.Level > 2)) || Traits.remnants && not(Traits.no_energy)
	Level: floor((Techs.ProjWeapons.Level / 2) + (Techs.EnergyPhysics.Level / 2))
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 80 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, FighterWeapon, Require:FighterHull, EnergyWeapon
	Tied To: ProjWeapons 6, EnergyPhysics 3
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[25 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[35 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1.5
	
	vDamage: Size * 70 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: 0.8 * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vRange: (80 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: vRange * 0.75
	vEffectiveRange: 0.7
	vMinHit: 0.5
	vMinDmg: 0.5
	vWasteHeat: Size * 0.125 * min((1 + (sqrt(Size) / 20)), 3) * (1 / GAME_RELOAD_MULT) * GAME_HEAT_MULT
	vPowCost: Size * 45

	Provides: MiniPlasmaWeapon with Damage[vDamage], Delay[vDelay], PowerUse[vPowCost], Range[vRange], Speed[vSpeed],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], minHitChance[vMinHit], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[15 * Size]

	Hints: Alpha[vDamage], Power[-1 * vPowCost / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/Delay[vDelay], Local/ProjSpeed[vSpeed], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]

System: FighterParticleCannon
	Name: #SS_FIGHTERPC_NAME
	Description: #SS_FIGHTERPC_DESC
	Appearance: FighterParticleCannon

	Available: ((Techs.ProjWeapons.Level > 7) && (Techs.ParticlePhysics.Level > 8)) || Traits.remnants && not(Traits.no_energy)
	Level: floor((Techs.ProjWeapons.Level / 2) + (Techs.ParticlePhysics.Level / 2))
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 80 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, EnergyWeapon
	Tied To: ProjWeapons 8, ParticlePhysics 9
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[50 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[35 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 2.0
	
	vDamage: Size * 160 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: 2.4 * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vRange: (140 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: vRange * 0.75
	vEffectiveRange: 0.7
	vMinHit: 0.5
	vMinDmg: 0.5
	vWasteHeat: Size * 4.2 * min((1 + (sqrt(Size) / 20)), 3) * (1 / GAME_RELOAD_MULT) * GAME_HEAT_MULT
	vPowCost: Size * 135

	Provides: MiniParticleWeapon with Damage[vDamage], Delay[vDelay], PowerUse[vPowCost], Range[vRange], Speed[vSpeed],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], minHitChance[vMinHit], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[30 * Size]

	Hints: Alpha[vDamage], Power[-1 * vPowCost / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/Delay[vDelay], Local/ProjSpeed[vSpeed], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]
	
System: FighterBomberASW
	Name: #SS_FBASW_NAME
	Description: #SS_FBASW_DESC
	Appearance: FighterBomberASW
	Available: ((Techs.ProjWeapons.Level > 0) && (Techs.Missiles.Level > 0))
	Level: floor((Techs.ProjWeapons.Level / 2) + (Techs.Missiles.Level / 2))
	Size: Scale
	HPLevel: Techs.Materials.Level-1 As Level
	Durability: GAME_SUBSYS_MULT * 100 * Size * pow(HEALTH_CURVE,HPLevel)
	Mass: 300 * Size * max((1 - (0.01 * (floor((Techs.Metallurgy.Level / 3) + (Techs.ShipConstruction.Level / 3) + (Techs.Chemistry.Level / 3))))), 0.6)
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, Bomb
	Tied To: ProjWeapons 1, Missiles 1
	
	vDamage: Size * 3000 * pow(LEVEL_GAIN_CURVE, Level) * GAME_DAMAGE_MULT
	vDelay: 5 * (1 + decay(pow(LEVEL_GAIN_CURVE, Level), 100)) * GAME_RELOAD_MULT
	vRange: (40 * (1 + (Level * (0.01 * WEAP_RANGE_CURVE)))) * ((sqrt(1 + Size) / 10) + 1) * WEAP_RANGE_MULT
	vSpeed: progress(5,2*LEVEL_GAIN_CURVE,Level)
	vAmmoStorage: Size * 24 * (1 + (0.2 * Level))
	
	Costs: Metals[300 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[50 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[vAmmoStorage]
	Complexity: 3.0
	
	Provides: AntiSurfaceWarhead with Damage[vDamage], Deviation[0], Delay[vDelay], AmmoUse[(6 * Size)], Range[vRange], Speed[vSpeed]
	
	Provides: AmmoStorage with Amount[vAmmoStorage]

	Requires:
		To Run:
			Control[10 * Size]

	Hints: Alpha[vDamage], Ammo[vAmmoStorage], AmmoUse[(-6 * Size) / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-6 * Size], Local/ProjSpeed[vSpeed], Local/Delay[vDelay]