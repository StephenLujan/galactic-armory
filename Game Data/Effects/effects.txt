//Effect Entries

//Name: Begins a new effect. Until the next Name:, all entries are given to the most recent effect

//Value: Specifies the name of a value held by the effect
//		 Every effect may have 0-4 values, and they may have any name
//		 These values are specified by Sub Systems and Effectors in the form of Value[Formula]
//		 You reference these values by using their name without quotes in function templates, or by receiving them in a script call

//FUNCTIONS
//  Functions are how effects affect objects
//	No function definition is mandatory, although effects without at least one function are no more than placeholders
//
//OnActive(): Triggered once when the component becomes active
//OnDeactive(): Triggered once when the component deactivates
//OnConstruct(): Called whenever something is constructed - Called prior to OnActivate
//OnDestruct(): Called when a sub system is damaged to 0% health - Only called as a result of damage, no other reason
//OnOwnerChange(): Called just before the object changes owners - Passed the from and to empires as arguments before the floats
//Once(): Called after something is constructed/activated the first time
//Tick(): Called varying times per second:
//			Structures: No more than 10x per second
//			Ship Sub-Systems: Tick-rate for the game (typically 20x per second)
//			Applied effects: Exactly 4x per second, with odd remaining times being treated as a partial tick
//			Other ticks will typically be applied at the game's tick-rate (~20x per second)
//
//Functions are defined as such:
//MODULE::FUNCTION
//
//Internal functions:
// These may be refered to as internal::FUNCTION, ::FUNCTION, or just FUNCTION
// Internal functions are a sort of template: For example, AddMax(1, "Test") would add 1 to the maximum value for the "Test" state, but AddMax(3, "Power") adds 3 to "Power"'s max value
// Internal functions have different requirements for their template. For example, AddMax() accepts anything for the first argument, but requires a string (state name) for the second
//
//Script functions:
// All script files used in effects must be loaded as a server script
// To specify a function, use the file's name as the module (e.g. the Trade function in BasicEffects.as is referenced as BasicEffects::Trade)
//
// Script functions must accept the following arguments:
//  Event@ - The event associated with the trigger of the effect
//  0-6 float values - These values are passed to the script in the same order they are defined in the effect definition. The argument names don't have to match, but it is suggested.
//		Note: For now, Functions have to accept the same number of floats as the effect they are referenced by defines, even if they don't use them.

Name:	DestructsShip
	OnDestruct: Death

Name:	ExplodesShip
	OnDestruct: BasicEffects::SelfDestruct

Name:	PowerOrDeath
	Tick: BasicEffects::DestructOnPowerOff
	OnDestruct: Death

Name:	PowerOrBoom
	Tick: BasicEffects::DestructOnPowerOff
	OnDeactive: BasicEffects::KillSystem
	OnDestruct: BasicEffects::SelfDestruct

Name:	HullSoak
	Value: ReceivePct
	Value: DmgAlter
	
	OnGlobalDamage: Combat::DealHullDamage
	OnDestruct: Death
	
Name:	SelfHeal
	Value: Rate
	Value: UpToHP
	
	Tick:	Combat::healMyDamage
	
Name:	Damage
	Value: Damage
	
	OnActive:	Combat::dealDamage

Name:	DoT
	Value: Damage
	
	Tick: Combat::DoT

Name:	ChanceDoT
	Value: Damage
	Value: Chance
	
	Tick: Combat::ChanceDoT

Name:	ChanceDoTAoE
	Value: Damage
	Value: Chance
	
	Tick: Combat::ChanceDoTAoE

Name:	SpaceDamage
	Value: DamageRate
	Tick: Combat::SpaceDamage

Name:	Board
	Value: Troops
	
	Tick: boarding::BoardTick

Name:	SolarPower
	Value: Efficiency
	Value: SurfaceArea
	
	Tick: BasicEffects::SolarPower

Name:	Control
	Value: Amount

	OnActive:	AddMax(Amount, "Control", 1)
	OnDeactive:		SubMax(Amount, "Control")

Name:	CrewQuarters
	Value: Amount

	Once: AddAmount(Amount, "Crew")
	OnActive:	AddMax(Amount, "Crew")
	OnDeactive:		SubMax(Amount, "Crew")

Name:	AirStorage
	Value: Amount

	Once: AddAmount(Amount, "Air")
	OnConstruct:	AddMax(Amount, "Air")
	OnDestruct:		SubMax(Amount, "Air")

Name:	MakeAir
	Value: Amount

	Tick: GenerateNoCargo("Air", Amount)

Name:	MineOre
	Value: Rate
	Value: PowCost
	
	Tick:	BasicEffects::MineOre

Name:	DrainResource
	Value: Rate
	
	Tick:	BasicEffects::DrainResource

//Provides [Rate] Power per second at minimum, 2x[Rate] at maximum (no current charge), each unit of Power costing [Cost] Fuel
Name: 	Power
	Value: Rate
	Value: Cost

	Tick:	BasicEffects::PowerGen

Name:	Capacitance
	Value: Amount

	Once: 		AddAmount(Amount, "Power")
	OnActive:	AddMax(Amount, "Power")
	OnDeactive:	SubMax(Amount, "Power")

Name:	Repair
	Value: Rate
	
	Tick: Repair(Rate)

Name:	TimeMod
	Value: Factor
	Tick:	BasicEffects::TimeModifier

//Converts [Rate] health/second from the target to Metals for the source at 1 dmg : [Factor] Metals
Name:	Salvage
	Value: Rate
	Value: Factor
	
	Tick:	BasicEffects::Salvage

//Attempts to capture the target's hull per tick (All other factors ignored, ScanQuality is a % chance from 0-1 to capture the hull per second)
Name:	Analyze
	Value: ScanQuality
	Value: PowCost
	
	Tick:	BasicEffects::Analyze

Name:	NegateControl
	Value: Amount
	
	OnActive: AddRequire(Amount, "Control")
	OnDeactive: SubRequire(Amount, "Control")

Name:	CapPlanet
	
	OnActive: BasicEffects::CapturePlanet

Name:	RingworldGen
	
	Tick: BasicEffects::CreateRingworld

Name:	MakeStructures
	Value: Amount
	
	OnActive: AddMax(Amount, "MakeStructures")
	OnDeactive: SubMax(Amount, "MakeStructures")

Name:	Quasar
	OnDestruct: Combat::QuasarExplode

Name:	QuasarDamage
	Value: Damage

	Tick: Combat::QuasarDamage

Name:	DamageRedirection
	OnGlobalDamage:	Combat::RedirectDamage
